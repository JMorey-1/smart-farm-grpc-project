syntax = "proto3";

package irrigation;

service IrrigationService {
  rpc GetAllSoilMoisture (Empty) returns (AllSoilMoistureResponse);
  rpc StartIrrigation (GreenhouseRequest) returns (IrrigationStatusResponse);
  rpc StopIrrigation (GreenhouseRequest) returns (IrrigationStatusResponse);
  rpc GetWaterUsage (GreenhouseRequest) returns (WaterUsageResponse);
  rpc ActivateIrrigation (stream GreenhouseRequest) returns (ActivateIrrigationResponse);

  // Stream soil moisture updates continuously
  rpc StreamSoilMoisture (Empty) returns (stream GreenhouseStatus);
}

// Messages

message Empty {}

message GreenhouseRequest {
  string greenhouseId = 1;
}

message IrrigationStatusResponse {
  string status = 1;
}

message WaterUsageResponse {
  float litresUsed = 1;
}

message AllSoilMoistureResponse {
  repeated GreenhouseStatus greenhouses = 1;
}

// Real-time GUI updates
message GreenhouseStatus {
  string greenhouseId = 1;
  string name = 2;
  float soilMoisture = 3;
  bool isIrrigating = 4;
  double litresUsed   = 5;
  string timestamp = 6; 
}

message ActivateIrrigationResponse {
  repeated string activatedGreenhouses = 1;
  float totalWaterProjected = 2;
}